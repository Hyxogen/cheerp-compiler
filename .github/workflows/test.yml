name: Test

on:
  push:
    branches: [ "master", "feat-libasan" ]

env:
  CHEERP_DEST: /opt/cheerp

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt upgrade -y && sudo apt install -y cmake python3 python3-distutils ninja-build mold
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: 'feat-libasan'
          path: 'cheerp-compiler'
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 500M
          key: ccache
          variant: ccache
      - name: Build and install cheerp
        run: |
          (cd "$GITHUB_WORKSPACE/cheerp-compiler" && cmake -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST" -S llvm -B build -C llvm/CheerpCmakeConf.cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=clang -G Ninja -DLLVM_USE_LINKER=mold -DCMAKE_CXX_FLAGS_RELEASE=-O3 -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DLLVM_ENABLE_ASSERTIONS=OFF -DLLVM_CCACHE_BUILD=On)
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build"
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build" install
      - name: Checkout cheerp-utils
        uses: actions/checkout@v3
        with:
          repository: 'leaningtech/cheerp-utils'
          path: 'cheerp-utils'
      - name: Install cheerp-utils
        run: |
          (cd "$GITHUB_WORKSPACE/cheerp-utils" && cmake -B build -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST") 
          make -C "$GITHUB_WORKSPACE/cheerp-utils/build" install -j
      - name: Checkout cheerp-musl
        uses: actions/checkout@v3
        with:
          repository: 'Hyxogen/cheerp-musl'
          ref: 'feat-weak-functions'
          path: 'cheerp-musl'
      - name: Build and install musl
        env:
          GENERICJS_DIR: build_genericjs
          ASMJS_DIR: build_asmjs
          GENERICJS_CC: "/bin/clang -target cheerp"
          ASMJS_CC: "/bin/clang -target cheerp-wasm"
          CFLAGS: "-Wno-int-conversion -DUSE_DL_PREFIX"
        run: |
          mkdir -p "$GITHUB_WORKSPACE/cheerp-musl/$GENERICJS_DIR" "$GITHUB_WORKSPACE/cheerp-musl/$ASMJS_DIR"
          (cd "$GITHUB_WORKSPACE/cheerp-musl/$GENERICJS_DIR" && CC="$CHEERP_DEST/$GENERICJS_CC" RANLIB="$CHEERP_DEST/bin/llvm-ar s" AR="$CHEERP_DEST/bin/llvm-ar" LD="$CHEERP_DEST/bin/llvm-link" ../configure --target=cheerp --disable-shared --prefix="$CHEERP_DEST" --with-malloc=dlmalloc)
          (cd "$GITHUB_WORKSPACE/cheerp-musl/$ASMJS_DIR" && CC="$CHEERP_DEST/$ASMJS_CC" RANLIB="$CHEERP_DEST/bin/llvm-ar s" AR="$CHEERP_DEST/bin/llvm-ar" LD="$CHEERP_DEST/bin/llvm-link"  ../configure --target=cheerp-wasm --disable-shared --prefix="$CHEERP_DEST" --with-malloc=dlmalloc)
          make -C "$GITHUB_WORKSPACE/cheerp-musl/$GENERICJS_DIR" -j
          make -C "$GITHUB_WORKSPACE/cheerp-musl/$GENERICJS_DIR" install
          make -C "$GITHUB_WORKSPACE/cheerp-musl/$ASMJS_DIR" -j
          make -C "$GITHUB_WORKSPACE/cheerp-musl/$ASMJS_DIR" install
      - name: Build and install runtimes
        run: |
          (cd "$GITHUB_WORKSPACE/cheerp-compiler" && cmake -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST" -S runtimes -B build_runtimes_genericjs -GNinja -C runtimes/CheerpCmakeConf.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$CHEERP_DEST/share/cmake/Modules/CheerpToolchain.cmake")
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build_runtimes_genericjs"
          (cd "$GITHUB_WORKSPACE/cheerp-compiler" && cmake -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST" -S runtimes -B build_runtimes_wasm -GNinja -C runtimes/CheerpCmakeConf.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$CHEERP_DEST/share/cmake/Modules/CheerpWasmToolchain.cmake")
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build_runtimes_wasm"
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build_runtimes_genericjs" install
          ninja -C "$GITHUB_WORKSPACE/cheerp-compiler/build_runtimes_wasm" install
      - name: Checkout cheerp-libs
        uses: actions/checkout@v3
        with:
          repository: 'leaningtech/cheerp-libs'
          path: 'cheerp-libs'
      - name: Build and install libraries
        env:
          GENERICJS_DIR: build_genericjs
          ASMJS_DIR: build_asmjs
        run: |
          make -C "$GITHUB_WORKSPACE/cheerp-libs/webgles" install INSTALL_PREFIX="$CHEERP_DEST" CHEERP_PREFIX="$CHEERP_DEST"
          make -C "$GITHUB_WORKSPACE/cheerp-libs/wasm" install INSTALL_PREFIX="$CHEERP_DEST" CHEERP_PREFIX="$CHEERP_DEST"
          make -C "$GITHUB_WORKSPACE/cheerp-libs/stdlibs" install INSTALL_PREFIX="$CHEERP_DEST" CHEERP_PREFIX="$CHEERP_DEST"
          (cd "$GITHUB_WORKSPACE/cheerp-libs/system" && cmake -B "$GENERICJS_DIR" -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST" -DCMAKE_TOOLCHAIN_FILE="$CHEERP_DEST/share/cmake/Modules/CheerpToolchain.cmake" .)
          cmake --build "$GITHUB_WORKSPACE/cheerp-libs/system/$GENERICJS_DIR" 
          cmake --install "$GITHUB_WORKSPACE/cheerp-libs/system/$GENERICJS_DIR" 
          (cd "$GITHUB_WORKSPACE/cheerp-libs/system" && cmake -B "$ASMJS_DIR" -DCMAKE_INSTALL_PREFIX="$CHEERP_DEST" -DCMAKE_TOOLCHAIN_FILE="$CHEERP_DEST/share/cmake/Modules/CheerpWasmToolchain.cmake" .)
          cmake --build "$GITHUB_WORKSPACE/cheerp-libs/system/$ASMJS_DIR" 
          cmake --install "$GITHUB_WORKSPACE/cheerp-libs/system/$ASMJS_DIR" 
      - name: Tar artifacts
        run: tar -zcvf cheerp-compiler.tar.gz /
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiler
          path: ./cheerp-compiler.tar.gz
          retention-days: 1
  cheerp-test:
    name: Run cheerp-utils tests
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download compiler
        uses: actions/download-artifact@v3
        with:
          name: compiler
      - name: Untar artifacts
        run: tar -xvf cheerp-compiler.tar.gz -C /opt
      - name: List directories
        run: ls -lra /opt
      - name: Checkout cheerp-utils
        uses: actions/checkout@v3
        with:
          repository: 'leaningtech/cheerp-utils'
      - name: Run tests
        working-directory: ./tests
        run: ./run_tests.py --all --determinism=3 --determinism-probability=0.2 "$CHEERP_DEST/bin/clang++" node
  asan-test:
    name: Run asan tests
    needs: test
    runs-on: ubunut-latest
    steps:
      - name: Download compiler
        uses: actions/download-artifact@v3
        with:
          name: compiler
      - name: Untar artifacts
        run: tar -xvf cheerp-compiler.tar.gz -C /opt
      - name: List directories
        run: ls -lra /opt
      - name: Checkout cheerp-compiler
        uses: actions/checkout@v3
        with:
          ref: 'feat-libasan'
      - name: Build runtime
        working-directory: ./compiler-rt/lib
        run: make
      - name: Run tests
        working-directory: ./compiler-rt/lib
        run: |
          export PATH="$PATH:/usr/lib/llvm-14/bin"
          ../../llvm/utils/lit/lit.py test
